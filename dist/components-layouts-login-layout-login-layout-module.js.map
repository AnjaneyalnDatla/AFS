{"version":3,"sources":["webpack:///./src/app/components/forgotPassword/forgotPassword.component.css","webpack:///./src/app/components/forgotPassword/forgotPassword.component.html","webpack:///./src/app/components/forgotPassword/forgotPassword.component.ts","webpack:///./src/app/components/layouts/login-layout/login-layout.module.ts","webpack:///./src/app/components/layouts/login-layout/login-layout.routing.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/passwordReset/passwordReset.component.css","webpack:///./src/app/components/passwordReset/passwordReset.component.html","webpack:///./src/app/components/passwordReset/passwordReset.component.ts","webpack:///./src/app/components/registration/registration.component.css","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6BAA6B,mBAAmB,yBAAyB,4BAA4B,iBAAiB,8BAA8B,KAAK,cAAc,yBAAyB,oBAAoB,oBAAoB,6BAA6B,0BAA0B,uBAAuB,wBAAwB,yBAAyB,iBAAiB,mCAAmC,2BAA2B,wCAAwC,gCAAgC,4CAA4C,oCAAoC,KAAK,iCAAiC,YAAY,YAAY,UAAU,QAAQ,KAAK,yBAAyB,YAAY,YAAY,UAAU,QAAQ,KAAK,qBAAqB,yBAAyB,uBAAuB,iBAAiB,kBAAkB,oBAAoB,yBAAyB,6DAA6D,gGAAgG,oBAAoB,6BAA6B,0BAA0B,KAAK,wBAAwB,uBAAuB,2BAA2B,0BAA0B,sBAAsB,KAAK,oDAAoD,kBAAkB,KAAK,mBAAmB,mBAAmB,KAAK,kBAAkB,yBAAyB,oBAAoB,0BAA0B,uBAAuB,KAAK,oBAAoB,yBAAyB,gBAAgB,yBAAyB,kBAAkB,KAAK,yBAAyB,wBAAwB,0BAA0B,4BAA4B,KAAK,uBAAuB,0BAA0B,4BAA4B,KAAK,qBAAqB,mBAAmB,KAAK,4BAA4B,uBAAuB,mBAAmB,KAAK,qBAAqB,qCAAqC,kCAAkC,KAAK,C;;;;;;;;;;;ACA39D,04DAA04D,uHAAuH,4X;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/8D;AAIX;AAEwC;AAO/E;IAME,iCAAqB,MAAc,EAC1B,qBAA4C;QADhC,WAAM,GAAN,MAAM,CAAQ;QAC1B,0BAAqB,GAArB,qBAAqB,CAAuB;QANtD,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QACb,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;IAItB,CAAC;IAEC,gCAAgC;IAChC,gCAAgC;IAEnC,kBAAkB;IAClB,oBAAoB;IAEnB,0CAAQ,GAAR;IACD,CAAC;IAEA,+CAAa,GAAb;QACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,uCAAK,GAAL;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAzBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAO6B,sDAAM;YACH,sFAAqB;OAP1C,uBAAuB,CA0BnC;IAAD,8BAAC;CAAA;AA1BmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbK;AACM;AACA;AACmB;AACP;AACE;AACqB;AACG;AACG;AAS7D;AAqB3B;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QApB7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,uEAAiB,CAAC;gBACxC,0DAAW;gBACX,iEAAe;gBACf,iEAAe;gBACf,gEAAc;gBACd,kEAAgB;gBAChB,mEAAiB;gBACjB,+DAAa;aACd;YACD,YAAY,EAAE;gBACZ,qEAAc;gBACd,0FAAqB;gBACrB,6FAAsB;gBACtB,gGAAuB;aACxB;SACF,CAAC;OAEW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;ACpC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACqB;AACG;AACG;AAEjF,IAAM,iBAAiB,GAAW;IACrC,EAAE,IAAI,EAAE,OAAO,EAAO,SAAS,EAAE,qEAAc,EAAE;IACjD,EAAE,IAAI,EAAE,UAAU,EAAI,SAAS,EAAE,0FAAqB,EAAC;IACvD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6FAAsB,EAAC;IAC3D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,gGAAuB,EAAC;CAChE,CAAC;;;;;;;;;;;;ACZF,6BAA6B,mBAAmB,yBAAyB,4BAA4B,iBAAiB,8BAA8B,KAAK,cAAc,yBAAyB,oBAAoB,oBAAoB,6BAA6B,0BAA0B,uBAAuB,wBAAwB,yBAAyB,iBAAiB,mCAAmC,2BAA2B,wCAAwC,gCAAgC,4CAA4C,oCAAoC,KAAK,iCAAiC,YAAY,YAAY,UAAU,QAAQ,KAAK,yBAAyB,YAAY,YAAY,UAAU,QAAQ,KAAK,qBAAqB,yBAAyB,uBAAuB,iBAAiB,kBAAkB,oBAAoB,yBAAyB,6DAA6D,gGAAgG,oBAAoB,6BAA6B,0BAA0B,KAAK,wBAAwB,uBAAuB,2BAA2B,0BAA0B,sBAAsB,KAAK,oDAAoD,kBAAkB,KAAK,mBAAmB,mBAAmB,KAAK,kBAAkB,yBAAyB,oBAAoB,0BAA0B,uBAAuB,KAAK,oBAAoB,yBAAyB,gBAAgB,yBAAyB,kBAAkB,KAAK,yBAAyB,wBAAwB,mEAAmE,6BAA6B,4BAA4B,KAAK,uBAAuB,6BAA6B,6BAA6B,2BAA2B,KAAK,qBAAqB,mBAAmB,KAAK,4BAA4B,uBAAuB,mBAAmB,KAAK,mBAAmB,mBAAmB,0BAA0B,uBAAuB,gCAAgC,uBAAuB,sBAAsB,sBAAsB,KAAK,K;;;;;;;;;;;ACA9pE,i4DAAi4D,oSAAoS,+FAA+F,+MAA+M,+J;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj6E;AAET;AAEsC;AAO/E;IAKE,wBAAoB,MAAc,EACxB,qBAA4C;QADlC,WAAM,GAAN,MAAM,CAAQ;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QALtD,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAIlB,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAUC;QATC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAClF,cAAI;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,eAAK;YACL,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,sCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,uCAAc,GAAd;QACC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC1C,CAAC;IAlCS,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAM4B,sDAAM;YACD,sFAAqB;OAN3C,cAAc,CAmC1B;IAAD,qBAAC;CAAA;AAnC0B;;;;;;;;;;;;ACX3B,6BAA6B,mBAAmB,yBAAyB,4BAA4B,iBAAiB,8BAA8B,KAAK,cAAc,yBAAyB,oBAAoB,oBAAoB,6BAA6B,0BAA0B,uBAAuB,wBAAwB,yBAAyB,iBAAiB,mCAAmC,2BAA2B,wCAAwC,gCAAgC,4CAA4C,oCAAoC,KAAK,iCAAiC,YAAY,YAAY,UAAU,QAAQ,KAAK,yBAAyB,YAAY,YAAY,UAAU,QAAQ,KAAK,qBAAqB,yBAAyB,uBAAuB,iBAAiB,kBAAkB,oBAAoB,yBAAyB,+DAA+D,gGAAgG,oBAAoB,6BAA6B,0BAA0B,KAAK,wBAAwB,uBAAuB,2BAA2B,0BAA0B,sBAAsB,KAAK,oDAAoD,kBAAkB,KAAK,mBAAmB,mBAAmB,KAAK,kBAAkB,yBAAyB,oBAAoB,0BAA0B,uBAAuB,KAAK,oBAAoB,yBAAyB,gBAAgB,yBAAyB,kBAAkB,KAAK,yBAAyB,wBAAwB,gEAAgE,4BAA4B,KAAK,uBAAuB,gEAAgE,4BAA4B,KAAK,qBAAqB,mBAAmB,KAAK,4BAA4B,uBAAuB,mBAAmB,KAAK,C;;;;;;;;;;;ACAx8D,2zDAA2zD,6L;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzwD;AAIX;AAEwC;AAO/E;IAKE,gCAAqB,MAAc,EAC1B,qBAA4C;QADhC,WAAM,GAAN,MAAM,CAAQ;QAC1B,0BAAqB,GAArB,qBAAqB,CAAuB;QALtD,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAIjB,CAAC;IAEC,gCAAgC;IAChC,gCAAgC;IAEnC,kBAAkB;IAClB,oBAAoB;IAEnB,yCAAQ,GAAR;IACD,CAAC;IAEA,8CAAa,GAAb;QACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IACxC,CAAC;IApBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAM6B,sDAAM;YACH,sFAAqB;OAN1C,sBAAsB,CAqBlC;IAAD,6BAAC;CAAA;AArBkC;;;;;;;;;;;;ACbnC,sCAAsC,oBAAoB,0BAA0B,8BAA8B,mBAAmB,yBAAyB,gBAAgB,qBAAqB,wBAAwB,8BAA8B,kCAAkC,qBAAqB,8BAA8B,mCAAmC,8BAA8B,WAAW,8BAA8B,4BAA4B,+BAA+B,2BAA2B,wCAAwC,sCAAsC,6DAA6D,eAAe,WAAW,OAAO,iBAAiB,sBAAsB,2BAA2B,6BAA6B,iBAAiB,kBAAkB,sBAAsB,mBAAmB,OAAO,gBAAgB,sBAAsB,8BAA8B,6BAA6B,mBAAmB,kBAAkB,oBAAoB,mBAAmB,OAAO,GAAG,gBAAgB,yBAAyB,GAAG,UAAU,kBAAkB,GAAG,cAAc,gCAAgC,oBAAoB,8BAA8B,yBAAyB,6BAA6B,GAAG,C;;;;;;;;;;;ACAvwC,+yEAA+yE,qG;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7vE;AAIX;AAEwC;AAO/E;IAKE,+BAAqB,MAAc,EAC1B,qBAA4C;QADhC,WAAM,GAAN,MAAM,CAAQ;QAC1B,0BAAqB,GAArB,qBAAqB,CAAuB;QALtD,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAIjB,CAAC;IAED,wCAAQ,GAAR;IACD,CAAC;IAEA,0CAAU,GAAV;QACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,4CAAY,GAAZ;IAEA,CAAC;IAlBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAM6B,sDAAM;YACH,sFAAqB;OAN1C,qBAAqB,CAmBjC;IAAD,4BAAC;CAAA;AAnBiC","file":"components-layouts-login-layout-login-layout-module.js","sourcesContent":["module.exports = \".container{\\n    height: 100%;\\n    position: relative;\\n    align-content: center;\\n    z-index: 1;\\n    justify-content: center;\\n  }\\n  \\n  .card{\\n    position: relative;\\n    padding: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 90px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    top: -90px;\\n    -webkit-animation-name: card;\\n    animation-name: card;\\n    -webkit-animation-duration: 600ms;\\n    animation-duration: 600ms;\\n    -webkit-animation-fill-mode: forwards;\\n    animation-fill-mode: forwards;\\n  }\\n  \\n  @-webkit-keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  @keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  .card-header{\\n    position: relative;\\n    overflow: hidden;\\n    top: -40px;\\n    width: 100%;\\n    padding: 25px;\\n    border-radius: 3px;\\n    background: linear-gradient(60deg, #78dfec, #79aab396);\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.678), 0 7px 10px -5px rgba(217, 225, 228, 0.4);\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n  \\n  .card-header h4{\\n    font-weight: 400;\\n    color: rgb(22, 1, 1);\\n    margin-bottom: 25px;\\n    margin-top: 5px;\\n  }\\n  \\n  .form-row, .card-form, .mat-input-container{\\n    width: 100%;\\n  }\\n  \\n  .card-form{\\n    padding: 5px;\\n  }\\n  \\n  .form-row{\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    margin-top: 13px;\\n  }\\n  \\n  .form-row i{\\n    position: relative;\\n    top: -5px;\\n    margin-right: 15px;\\n    color: #555;\\n  }\\n  \\n  .form-row button{\\n    margin-left: 40px;\\n    background: #78dfec;\\n    color: rgb(22, 1, 1);;\\n  }\\n  \\n  .footer button{\\n    background: #78dfec;\\n    color: rgb(22, 1, 1);;\\n  }\\n  \\n  .card-footer{\\n    margin: 10px;\\n  }\\n  \\n  .card-footer button{\\n    color: #0a324996;\\n    border: #555;\\n  }\\n  \\n  .fontSuccess{\\n      font-weight: bold !important;\\n      color: #4caf50 !important;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"background\\\"></div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                <form class=\\\"passReset-form\\\" name=\\\"form\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"card content card-panel\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4>Forgot your password?</h4>\\n                            \\n                        </div>\\n                        <div class=\\\"card-form\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">email</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"email\\\" matInput placeholder=\\\"Enter Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div>\\n                            <!-- <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">lock_outline</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" name=\\\"confirmPass\\\" [(ngModel)]=\\\"model.confirmPass\\\" #confirmPass=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div> -->\\n                            \\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                           \\n                            <button mat-raised-button (click)=\\\"resetPassword();\\\" [disabled]=\\\"showSuccess\\\">Submit</button>\\n                            <button mat-raised-button (click)=\\\"login();\\\" >Back</button>\\n                           \\n                        </div>\\n                        <div class=\\\"fontSuccess\\\" [hidden]=\\\"!showSuccess\\\">\\n                            Check your email for password reset instructions.\\n                          </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material'\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-forgotPassword',\n  templateUrl: './forgotPassword.component.html',\n  styleUrls: ['./forgotPassword.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\tmodel: any = {};\n\tloading = false;\n    returnVal = false;\n    showSuccess = false;\n\n  constructor( private router: Router,\n   private authenticationService: AuthenticationService,) { \n  }\n  \n    //username: new FormControl('');\n    //password: new FormControl('');\n\n\t//loading = false;\n\t//returnUrl: string;\n\n  ngOnInit() {\n\t}  \n\n  resetPassword(){\n\t this.showSuccess = true;\n  }\n\n  login(){\n    this.router.navigate([\"login\"]);\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginLayoutRoutes } from './login-layout.routing';\nimport { LoginComponent } from '../../login/login.component';\nimport { RegistrationComponent } from '../../registration/registration.component';\nimport { PasswordResetComponent } from '../../passwordReset/passwordReset.component';\nimport { ForgotPasswordComponent } from '../../forgotPassword/forgotPassword.component';\n\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatRippleModule,\n  MatTooltipModule,\n  MatCheckboxModule,\n  MatMenuModule,\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(LoginLayoutRoutes),\n    FormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatMenuModule,\n  ],\n  declarations: [\n    LoginComponent,\n    RegistrationComponent,\n    PasswordResetComponent,\n    ForgotPasswordComponent,\n  ]\n})\n\nexport class LoginLayoutModule {}\n","import { Routes } from '@angular/router';\n\nimport { LoginComponent } from '../../login/login.component';\nimport { RegistrationComponent } from '../../registration/registration.component';\nimport { PasswordResetComponent } from '../../passwordReset/passwordReset.component';\nimport { ForgotPasswordComponent } from '../../forgotPassword/forgotPassword.component';\n\nexport const LoginLayoutRoutes: Routes = [\n    { path: 'login',      component: LoginComponent },\n    { path: 'register',   component: RegistrationComponent},\n    { path: 'passwordReset', component: PasswordResetComponent},\n    { path: 'forgotPassword', component: ForgotPasswordComponent},\n];\n","module.exports = \".container{\\n    height: 100%;\\n    position: relative;\\n    align-content: center;\\n    z-index: 1;\\n    justify-content: center;\\n  }\\n  \\n  .card{\\n    position: relative;\\n    padding: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 90px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    top: -90px;\\n    -webkit-animation-name: card;\\n    animation-name: card;\\n    -webkit-animation-duration: 600ms;\\n    animation-duration: 600ms;\\n    -webkit-animation-fill-mode: forwards;\\n    animation-fill-mode: forwards;\\n  }\\n  \\n  @-webkit-keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  @keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  .card-header{\\n    position: relative;\\n    overflow: hidden;\\n    top: -40px;\\n    width: 100%;\\n    padding: 25px;\\n    border-radius: 3px;\\n    background: linear-gradient(60deg, #78dfec, #79aab396);\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.678), 0 7px 10px -5px rgba(217, 225, 228, 0.4);\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n  \\n  .card-header h4{\\n    font-weight: 400;\\n    color: rgb(22, 1, 1);\\n    margin-bottom: 25px;\\n    margin-top: 5px;\\n  }\\n  \\n  .form-row, .card-form, .mat-input-container{\\n    width: 100%;\\n  }\\n  \\n  .card-form{\\n    padding: 5px;\\n  }\\n  \\n  .form-row{\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    margin-top: 13px;\\n  }\\n  \\n  .form-row i{\\n    position: relative;\\n    top: -5px;\\n    margin-right: 15px;\\n    color: #555;\\n  }\\n  \\n  .form-row button{\\n    margin-left: 40px;\\n    /* background: linear-gradient(60deg,  #7796a596, #79aab396); */\\n    background: #78dfec;\\n    color: rgb(22, 1, 1);;\\n  }\\n  \\n  .footer button{\\n    /* background: #77AF44; */\\n    background: #78dfec;\\n    color: rgb(22, 1, 1);\\n  }\\n  \\n  .card-footer{\\n    margin: 10px;\\n  }\\n  \\n  .card-footer button{\\n    color: #0a324996;\\n    border: #555;\\n  }\\n  \\n  .pswd-text{\\n    float: right;\\n    padding-bottom: 5px;\\n    margin-left: 18%;\\n    color: #3b8a98 !important;\\n    font-weight: 400;\\n    font-size: 14px;\\n    cursor: pointer;\\n  }  \\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"background\\\"></div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                <form class=\\\"login-form\\\" name=\\\"form\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"card content card-panel\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4>Welcome</h4>\\n                            \\n                        </div>\\n                        <div class=\\\"card-form\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">face</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"text\\\" matInput placeholder=\\\"User Name\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">lock_outline</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                                <mat-checkbox><span style=\\\"color:black\\\">Remember me</span></mat-checkbox>\\n                                <span class=\\\"pswd-text\\\"><a (click)=\\\"forgotPassword();\\\">Forgot password?</a></span>\\n                            </div>\\n                            \\n                        </div>\\n                        <!-- <div class=\\\"footer\\\">\\n                           \\n                            <button mat-raised-button primary (click)=\\\"login();\\\">Login</button>\\n                            <button mat-raised-button ((click)=\\\"regClick();\\\">Register</button>\\n                           \\n                        </div> -->\\n                        <div class=\\\"footer\\\">\\n                            <button mat-raised-button (click)=\\\"login();\\\">Login</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material'\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  loading = false;\n  returnVal = false;\n\n  constructor(private router: Router,\n    private authenticationService: AuthenticationService, ) {\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authenticationService.login(this.model.username, this.model.password).subscribe(\n      data => {\n        this.router.navigate([\"dashboard\"]);\n      },\n      error => {\n      alert(\"Invalid credentials\");\n      this.loading = false;\n      }\n    );\n  }\n  \n  regClick() {\n    this.router.navigate([\"register\"]);\n  }\n\n  resetPassword(){\n    this.router.navigate([\"passwordReset\"]);\n   }\n\n   forgotPassword(){\n    this.router.navigate([\"forgotPassword\"]);\n   }\n}","module.exports = \".container{\\n    height: 100%;\\n    position: relative;\\n    align-content: center;\\n    z-index: 1;\\n    justify-content: center;\\n  }\\n  \\n  .card{\\n    position: relative;\\n    padding: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 90px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    top: -90px;\\n    -webkit-animation-name: card;\\n    animation-name: card;\\n    -webkit-animation-duration: 600ms;\\n    animation-duration: 600ms;\\n    -webkit-animation-fill-mode: forwards;\\n    animation-fill-mode: forwards;\\n  }\\n  \\n  @-webkit-keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  @keyframes card {\\n    from {top: -40px;}\\n    to {top: 0;}\\n  }\\n  \\n  .card-header{\\n    position: relative;\\n    overflow: hidden;\\n    top: -40px;\\n    width: 100%;\\n    padding: 25px;\\n    border-radius: 3px;\\n    background: linear-gradient(60deg, #d4e2e796, #79aab396);\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.678), 0 7px 10px -5px rgba(217, 225, 228, 0.4);\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n  \\n  .card-header h4{\\n    font-weight: 400;\\n    color: rgb(22, 1, 1);\\n    margin-bottom: 25px;\\n    margin-top: 5px;\\n  }\\n  \\n  .form-row, .card-form, .mat-input-container{\\n    width: 100%;\\n  }\\n  \\n  .card-form{\\n    padding: 5px;\\n  }\\n  \\n  .form-row{\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    margin-top: 13px;\\n  }\\n  \\n  .form-row i{\\n    position: relative;\\n    top: -5px;\\n    margin-right: 15px;\\n    color: #555;\\n  }\\n  \\n  .form-row button{\\n    margin-left: 40px;\\n    background: linear-gradient(60deg,  #7796a596, #79aab396);\\n    color: rgb(22, 1, 1);;\\n  }\\n  \\n  .footer button{\\n    background: linear-gradient(60deg,  #7796a596, #79aab396);\\n    color: rgb(22, 1, 1);;\\n  }\\n  \\n  .card-footer{\\n    margin: 10px;\\n  }\\n  \\n  .card-footer button{\\n    color: #0a324996;\\n    border: #555;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"background\\\"></div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\"></div>\\n            <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                <form class=\\\"passReset-form\\\" name=\\\"form\\\" #f=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"card content card-panel\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h4>Reset Password</h4>\\n                            \\n                        </div>\\n                        <div class=\\\"card-form\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">lock_outline</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"password\\\" matInput placeholder=\\\"New Password\\\" name=\\\"newPass\\\" [(ngModel)]=\\\"model.newPass\\\" #newPass=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                                <i class=\\\"material-icons\\\">lock_outline</i>\\n                                <mat-input-container color=\\\"accent\\\">\\n                                    <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" name=\\\"confirmPass\\\" [(ngModel)]=\\\"model.confirmPass\\\" #confirmPass=\\\"ngModel\\\" />\\n                                </mat-input-container>\\n                            </div>\\n                            \\n                        </div>\\n                        <div class=\\\"footer button\\\">\\n                           \\n                            <button mat-raised-button (click)=\\\"resetPassword();\\\">Submit</button>\\n                           \\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material'\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-passwordReset',\n  templateUrl: './passwordReset.component.html',\n  styleUrls: ['./passwordReset.component.css']\n})\nexport class PasswordResetComponent implements OnInit {\n\tmodel: any = {};\n\tloading = false;\n\treturnVal = false;\n\n  constructor( private router: Router,\n   private authenticationService: AuthenticationService,) { \n  }\n  \n    //username: new FormControl('');\n    //password: new FormControl('');\n\n\t//loading = false;\n\t//returnUrl: string;\n\n  ngOnInit() {\n\t}  \n\n  resetPassword(){\n\t this.router.navigate([\"passwordReset\"]);\n  }\n}","module.exports = \".registration-page {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n    position: relative;\\n    .content {\\n        z-index: 1;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        .app-name {\\n            margin-top: 0px;\\n            padding-bottom: 10px;\\n            font-size: 32px;\\n        }\\n        .registration-form {\\n            padding: 40px;\\n            background: #fff;\\n            width: 500px;\\n            box-shadow: 0 0 10px #ddd;\\n            input:-webkit-autofill {\\n                -webkit-box-shadow: 0 0 0 30px white inset;\\n            }\\n        }\\n    }\\n\\n    &:after {\\n        content: '';\\n        background: #fff;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        bottom: 50%;\\n        right: 0;\\n    }\\n    &:before {\\n        content: '';\\n        background: #3f51b5;\\n        position: absolute;\\n        top: 50%;\\n        left: 0;\\n        bottom: 0;\\n        right: 0;\\n    }\\n}\\n.text-center {\\n    text-align: center;\\n}\\n.w-100 {\\n    width: 100%;\\n}\\n.card-panel{\\n\\ttransition: box-shadow .25s;\\n    padding: 20px;\\n    margin: 0.5rem 0 1rem 0;\\n    border-radius: 2px;\\n    background-color: #fff;\\n}\"","module.exports = \"<div class=\\\"registration-page\\\">\\n    <div class=\\\"content card-panel\\\">\\n        <form class=\\\"registration-form\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && registration()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"text-center\\\">\\n                <h2 class=\\\"app-name\\\">Registration</h2>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\t\\t\\t\\t\\t\\n                        <input matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\t\\t\\t<div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\t\\t\\t\\t\\t\\n                        <input matInput placeholder=\\\"User Name\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\t\\t\\t<div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\t\\t\\t<div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <mat-form-field class=\\\"w-100\\\">\\n                        <input matInput type=\\\"password\\\" placeholder=\\\"Retype Password\\\" name=\\\"repassword\\\" [(ngModel)]=\\\"model.repassword\\\" #repassword=\\\"ngModel\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100\\\">Register</button>\\n                </div>\\n            </div>\\n\\t\\t\\t<br>\\n\\t\\t\\t<div fxFlex fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n                <div fxFlexFill>\\n                    <button mat-raised-button color=\\\"primary\\\" class=\\\"w-100\\\" (click)=\\\"loginClick();\\\">Login</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material'\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\tmodel: any = {};\n\tloading = false;\n\treturnVal = false;\n\n  constructor( private router: Router,\n   private authenticationService: AuthenticationService,) { \n  }\n\n  ngOnInit() {\n\t}  \n\n  loginClick(){\n\t this.router.navigate([\"login\"]);\n  }\n\n  registration(){\n    \n  }\n}"],"sourceRoot":""}